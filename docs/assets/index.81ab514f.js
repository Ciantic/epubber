import{t as b,d as v,c as w,i as E,a as y,b as _,S as F,s as L,Z as O,B as A,T as $,r as D}from"./vendor.da65c12b.js";const N=function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))l(e);new MutationObserver(e=>{for(const n of e)if(n.type==="childList")for(const d of n.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&l(d)}).observe(document,{childList:!0,subtree:!0});function c(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerpolicy&&(n.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?n.credentials="include":e.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function l(e){if(e.ep)return;e.ep=!0;const n=c(e);fetch(e.href,n)}};N();const C=b('<div><h1>Concats all the epub HTML files and shows in the sandboxed iframe</h1><h2>Select epub file</h2><input type="file" name=""><h2>Or type fetchable URL</h2><input type="text" placeholder="URL"> <button type="button">Fetch</button><br></div>'),M=b('<iframe sandbox=""></iframe>'),P=b("<div></div>"),x=async s=>{const c=await new O(new A(s)).getEntries(),l=c.filter(t=>t.filename.endsWith(".opf"));if(l.length!==1)throw new Error("OPF confusion");const n=await l[0].getData?.(new $),r=[...new DOMParser().parseFromString(n,"text/xml").querySelectorAll("manifest item")].filter(t=>t.getAttribute("media-type")?.match(/html/)).map(t=>t.getAttribute("href")||"\u2705").map(t=>c.filter(i=>i.filename.endsWith(`/${t}`))[0]).filter(t=>t),f=(await Promise.all(r.map(t=>t.getData?.(new $)))).map(t=>{let i=new DOMParser().parseFromString(t,"application/xhtml+xml");return i.querySelector("parsererror")&&(i=new DOMParser().parseFromString(t,"text/html")),i.querySelectorAll("a").forEach(u=>{u.hasAttribute("href")&&(u.href="#"+u.href)}),i.body.childNodes}),m=document.implementation.createDocument(null,"html"),h=m.createElement("body");return m.documentElement.append(h),f.forEach(t=>{const i=m.createElement("div");i.append(...t),h.appendChild(i)}),m.documentElement.outerHTML},T=()=>{let s;const[a,c]=w(""),[l,e]=w("");async function n(){if(!s)return;const o=s.files?.[0];if(o){const r=await x(o);e(r)}}async function d(o){try{const r=await fetch(o),p=await x(await r.blob());e(p)}catch(r){r instanceof TypeError?c(r.name+": "+r.message):c("Unable to fetch")}}function S(){return(()=>{const o=C.cloneNode(!0),r=o.firstChild,p=r.nextSibling,f=p.nextSibling,m=f.nextSibling,h=m.nextSibling,t=h.nextSibling,i=t.nextSibling;i.nextSibling,f.$$input=n;const g=s;return typeof g=="function"?g(f):s=f,i.$$click=u=>{u.target.previousElementSibling instanceof HTMLInputElement&&d(u.target.previousElementSibling.value)},E(o,a,null),o})()}return(()=>{const o=P.cloneNode(!0);return E(o,y(F,{get when(){return l()},fallback:()=>y(S,{}),get children(){const r=M.cloneNode(!0);return _(()=>L(r,"srcdoc",l())),r}})),o})()};v(["input","click"]);D(()=>y(T,{}),document.getElementById("root"));
